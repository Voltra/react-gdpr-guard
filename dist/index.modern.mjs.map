{"version":3,"file":"index.modern.mjs","sources":["../src/ManagerWrapper.ts","../src/SaviorWrapper.ts","../src/index.ts","../src/globalState.ts"],"sourcesContent":["import type {\n\tGdprManager,\n\tGdprManagerRaw,\n\tGdprGuard,\n\tGdprGuardGroup,\n\tGdprStorage,\n\tGdprManagerEventHub,\n} from \"gdpr-guard\";\n\nimport type { MethodNamesOf } from \"./typings\";\nimport { ArgumentsOf } from \"./typings\";\nimport { StoreHolder } from \"./globalState\";\n\nexport interface ReactGdprGuardGlobalStore {\n\tmaterializedState: GdprManagerRaw;\n\tupdate(manager: GdprManagerRaw): ReactGdprGuardGlobalStore;\n}\n\nexport class ManagerWrapper {\n\t/* eslint-disable no-useless-constructor, no-empty-function */\n\tconstructor(\n\t\tprotected _manager: GdprManager,\n\t\tprotected _globalStoreHolder: StoreHolder<ReactGdprGuardGlobalStore>\n\t) {}\n\t/* eslint-enable no-useless-constructor, no-empty-function */\n\n\tpublic get manager(): GdprManager {\n\t\treturn this._manager;\n\t}\n\n\tpublic get materializedState(): GdprManagerRaw {\n\t\treturn this._globalStoreHolder.store!.materializedState;\n\t}\n\n\tpublic triggerUpdate(): void {\n\t\tthis._globalStoreHolder.store!.update(this.generateRawManager());\n\t}\n\n\tpublic get bannerWasShown(): boolean {\n\t\treturn this.manager.bannerWasShown;\n\t}\n\n\tpublic get events(): GdprManagerEventHub {\n\t\treturn this.manager.events;\n\t}\n\n\tpublic closeBanner(): void {\n\t\tthis.manager.closeBanner();\n\t\tthis.triggerUpdate();\n\t}\n\n\tpublic resetAndShowBanner(): void {\n\t\tthis.manager.resetAndShowBanner();\n\t\tthis.triggerUpdate();\n\t}\n\n\tpublic json(): GdprManagerRaw {\n\t\treturn this.materializedState;\n\t}\n\n\tpublic toString(): string {\n\t\treturn JSON.stringify(this.materializedState);\n\t}\n\n\tpublic disable(target?: string): this {\n\t\treturn this.wrap(\"disable\", target);\n\t}\n\n\tpublic enable(target?: string): this {\n\t\treturn this.wrap(\"enable\", target);\n\t}\n\n\tpublic toggle(target?: string): this {\n\t\treturn this.wrap(\"toggle\", target);\n\t}\n\n\tpublic disableForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.disableForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic enableForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.enableForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic toggleForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.toggleForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic isEnabled(name: string): boolean {\n\t\treturn this.manager.isEnabled(name);\n\t}\n\n\tpublic hasGroup(groupName: string): boolean {\n\t\treturn this.manager.hasGroup(groupName);\n\t}\n\n\tpublic hasGuard(guardName: string): boolean {\n\t\treturn this.manager.hasGuard(guardName);\n\t}\n\n\tpublic getGroup(groupName: string): GdprGuardGroup | null {\n\t\treturn this.manager.getGroup(groupName);\n\t}\n\n\tpublic getGuard(guardName: string): GdprGuard | null {\n\t\treturn this.manager.getGuard(guardName);\n\t}\n\n\tprotected generateRawManager(): GdprManagerRaw {\n\t\treturn this.manager.raw();\n\t}\n\n\tpublic hotswap(newManager: GdprManager): this {\n\t\tthis._manager = newManager;\n\t\tthis.triggerUpdate();\n\t\treturn this;\n\t}\n\n\tprotected wrap<Method extends MethodNamesOf<GdprGuard>>(\n\t\tmethod: Method,\n\t\ttarget?: string,\n\t\t...args: ArgumentsOf<GdprGuard[Method]>\n\t): this {\n\t\tif (\n\t\t\ttypeof target === \"undefined\" &&\n\t\t\ttypeof this.manager[method] === \"function\"\n\t\t) {\n\t\t\t// False positive of TS2349 or TS2684\n\t\t\t// @ts-ignore\n\t\t\tthis.manager[method](...args);\n\t\t\tthis.triggerUpdate();\n\t\t} else if (this.manager.hasGuard(target as string)) {\n\t\t\tconst guard = this.manager.getGuard(target as string);\n\n\t\t\tif (typeof guard?.[method] === \"function\") {\n\t\t\t\t// False positive of TS2349 or TS2684\n\t\t\t\t// @ts-ignore\n\t\t\t\tguard?.[method](...args);\n\t\t\t\tthis.triggerUpdate();\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n}\n","import { GdprSaviorAdapter } from \"gdpr-guard\";\nimport type {\n\tGdprSavior,\n\tGdprManager,\n\tGdprManagerFactory,\n\tGdprManagerRaw,\n} from \"gdpr-guard\";\n\nimport type { ManagerWrapper } from \"./ManagerWrapper\";\n\nexport class SaviorWrapper extends GdprSaviorAdapter {\n\tconstructor(\n\t\tprotected savior: GdprSavior,\n\t\tprotected managerWrapper: ManagerWrapper\n\t) {\n\t\tsuper();\n\t}\n\n\tasync updateSharedManager(manager: GdprManager): Promise<void> {\n\t\tif (this.managerWrapper.manager === manager) return;\n\n\t\tawait this.savior.updateSharedManager(manager);\n\t\tthis.managerWrapper.hotswap(manager);\n\t}\n\n\t/// Delegates\n\tcheck() {\n\t\treturn this.savior.check();\n\t}\n\n\texists(shouldUpdate = true) {\n\t\treturn this.savior.exists(shouldUpdate);\n\t}\n\n\trestore(shouldUpdate = true) {\n\t\treturn this.savior.restore(shouldUpdate);\n\t}\n\n\trestoreOrCreate(factory: GdprManagerFactory) {\n\t\treturn this.savior.restoreOrCreate(factory);\n\t}\n\n\tstore(manager: GdprManagerRaw) {\n\t\treturn this.savior.store(manager);\n\t}\n}\n","import type {\n\tGdprManagerFactory,\n\tGdprManagerRaw,\n\tGdprSavior,\n\tGdprManagerEventHub,\n\tGdprGuardRaw,\n\tGdprStorage,\n} from \"gdpr-guard\";\nimport { GdprManager } from \"gdpr-guard\";\nimport { DependencyList, useRef, useCallback, useMemo, useEffect } from \"react\";\n\nimport { createGlobalStore } from \"./globalState\";\nimport { ManagerWrapper, ReactGdprGuardGlobalStore } from \"./ManagerWrapper\";\nimport { SaviorWrapper } from \"./SaviorWrapper\";\nimport type {\n\tGdprGuardHooks,\n\tUseGdpr,\n\tUseSetupGdprEffect,\n\tUseGdprComputed,\n\tUseGdprGuard,\n\tUseGdprGuardEnabledState,\n\tUseGdprManager,\n\tUseGdprSavior,\n\tUseAttachGdprListenersEffect,\n} from \"./typings\";\n\n/**\n * Semantic wrapper around {@link useCallback}\n */\nconst useFunction = <Fn extends (...args: any[]) => any>(\n\tfn: Fn,\n\tdeps: DependencyList = []\n): Fn => {\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\treturn useCallback(fn, deps);\n};\n\n/**\n * {@link useEffect} but that will only be triggered after one render/call attempt as already been made\n */\nconst useEffectOnSecondRender = <Fn extends (...args: any[]) => any>(\n\tfn: Fn,\n\tdeps: DependencyList = []\n) => {\n\tconst didMount = useRef(false);\n\n\tuseEffect(() => {\n\t\tif (didMount.current) {\n\t\t\tfn();\n\t\t\treturn;\n\t\t}\n\t\tdidMount.current = true;\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [...deps, fn, didMount]);\n};\n\n/**\n * Semantic wrapper around {@link useEffect} used to call a function when one of the dependency changes\n * regardless of whether that dependency is used in the function or not\n */\nconst watch = <Fn extends (...args: any[]) => any>(\n\tinputs: DependencyList,\n\tfn: Fn\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n) => useEffect(fn, inputs);\n\n/**\n * Create hooks for the gdpr-guard library based on the provided {@link GdprSavior}\n * @param savior - The {@link GdprSavior} to wrap\n * @param managerFactory - A factory to the latest version of your {@link GdprManager}\n * @returns The React hooks associated to that {@link GdprSavior}\n */\nexport const createGdprGuardHooks = (\n\tsavior: GdprSavior,\n\tmanagerFactory: GdprManagerFactory\n): GdprGuardHooks => {\n\t// Use a dummy manager that'll be hotswap later after init\n\tconst dummyManager = GdprManager.create([]);\n\tconst [globalStoreHolder, useGlobalStore] =\n\t\tcreateGlobalStore<ReactGdprGuardGlobalStore>((get, set) => ({\n\t\t\tmaterializedState: dummyManager.raw(),\n\t\t\tupdate: (manager: GdprManagerRaw) => {\n\t\t\t\treturn set(store => ({ ...store, materializedState: manager }));\n\t\t\t},\n\t\t}));\n\n\tconst managerWrapper = new ManagerWrapper(dummyManager, globalStoreHolder);\n\n\tconst saviorWrapper = new SaviorWrapper(savior, managerWrapper);\n\n\tconst useGdprSavior: UseGdprSavior = (): GdprSavior => saviorWrapper;\n\n\tconst useGdprManager: UseGdprManager = (): ManagerWrapper => managerWrapper;\n\n\t/**\n\t * For internal uses only\n\t */\n\tconst useWrappedManager = () => useGdprManager().manager;\n\n\tconst useSetupGdprEffect: UseSetupGdprEffect = (\n\t\tonError = (e: unknown) => {}\n\t) => {\n\t\tconst wrappingManager = useGdprManager();\n\t\tconst wrappedManager = useWrappedManager();\n\n\t\tconst restoreManagerOnBoot = useFunction(() => {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst manager = await saviorWrapper.restoreOrCreate(\n\t\t\t\t\t\tmanagerFactory\n\t\t\t\t\t);\n\n\t\t\t\t\twrappingManager.hotswap(manager);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonError(e);\n\t\t\t\t}\n\t\t\t})();\n\t\t}, [wrappingManager]);\n\n\t\tuseEffectOnSecondRender(restoreManagerOnBoot);\n\n\t\t// Auto-close\n\t\twatch([wrappedManager], () => {\n\t\t\tif (wrappingManager.bannerWasShown) {\n\t\t\t\twrappingManager.closeBanner();\n\t\t\t}\n\t\t});\n\t};\n\n\tconst useGdprComputed: UseGdprComputed = <T>(\n\t\tfactory: () => T,\n\t\tdeps: DependencyList = []\n\t): T => {\n\t\tconst globalStore = useGlobalStore();\n\t\tconst fn = useFunction(factory, deps);\n\n\t\treturn useMemo(fn, [globalStore, fn]);\n\t};\n\n\tconst useAttachGdprListenersEffect: UseAttachGdprListenersEffect = (\n\t\tcallback: (eventHub: GdprManagerEventHub, manager: GdprManager) => void\n\t) => {\n\t\tconst wrappedManager = useWrappedManager();\n\n\t\twatch([callback, wrappedManager], () => {\n\t\t\tconst { events } = wrappedManager;\n\t\t\tcallback(events, wrappedManager);\n\t\t});\n\t};\n\n\tconst useGdprGuardEnabledState: UseGdprGuardEnabledState = (\n\t\tguardName: string,\n\t\tuseBannerStatus: boolean = false\n\t) => {\n\t\treturn useGdprComputed(() => {\n\t\t\tconst bannerWasShown =\n\t\t\t\t!useBannerStatus || managerWrapper.bannerWasShown;\n\n\t\t\treturn (\n\t\t\t\tbannerWasShown &&\n\t\t\t\t(managerWrapper.getGuard(guardName)?.enabled ?? false)\n\t\t\t);\n\t\t}, [guardName, managerWrapper.bannerWasShown]);\n\t};\n\n\tconst useGdprGuard: UseGdprGuard = (guardName: string) => {\n\t\tconst manager = useGdprManager();\n\n\t\tconst guard = useGdprComputed(() => {\n\t\t\treturn manager.getGuard(guardName)?.raw();\n\t\t}, [guardName, manager]) as GdprGuardRaw | null;\n\n\t\tconst enableGuard = useFunction(() => {\n\t\t\tmanager.enable(guardName);\n\t\t}, [guardName, manager]);\n\n\t\tconst disableGuard = useFunction(() => {\n\t\t\tmanager.disable(guardName);\n\t\t}, [guardName, manager]);\n\n\t\tconst toggleGuard = useFunction(() => {\n\t\t\tmanager.toggle(guardName);\n\t\t}, [guardName, manager]);\n\n\t\treturn {\n\t\t\tguard,\n\t\t\tenableGuard,\n\t\t\tdisableGuard,\n\t\t\ttoggleGuard,\n\t\t};\n\t};\n\n\tconst useGdpr: UseGdpr = () => {\n\t\tconst wrapper = useGdprManager();\n\n\t\t// Manager\n\t\tconst manager = useGdprComputed(\n\t\t\t() => wrapper.materializedState,\n\t\t\t[wrapper, wrapper.materializedState]\n\t\t);\n\n\t\tconst enableManager = useFunction(() => {\n\t\t\twrapper.enable();\n\t\t}, [wrapper]);\n\n\t\tconst disableManager = useFunction(() => {\n\t\t\twrapper.disable();\n\t\t}, [wrapper]);\n\n\t\tconst toggleManager = useFunction(() => {\n\t\t\twrapper.toggle();\n\t\t}, [wrapper]);\n\n\t\t// Guard/group\n\t\tconst enableGuard = useFunction(\n\t\t\t(guardName: string) => {\n\t\t\t\twrapper.enable(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst disableGuard = useFunction(\n\t\t\t(guardName: string) => {\n\t\t\t\twrapper.disable(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst toggleGuard = useFunction(\n\t\t\t(guardName: string) => {\n\t\t\t\twrapper.toggle(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst guardIsEnabled = useFunction(\n\t\t\t(guardName: string, useBannerStatus: boolean = false) => {\n\t\t\t\tconst bannerWasShown =\n\t\t\t\t\t!useBannerStatus || wrapper.bannerWasShown;\n\t\t\t\treturn bannerWasShown && wrapper.isEnabled(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\t// Storage\n\t\tconst enableForStorage = useFunction(\n\t\t\t(storage: GdprStorage) => {\n\t\t\t\twrapper.enableForStorage(storage);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst disableForStorage = useFunction(\n\t\t\t(storage: GdprStorage) => {\n\t\t\t\twrapper.disableForStorage(storage);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst toggleForStorage = useFunction(\n\t\t\t(storage: GdprStorage) => {\n\t\t\t\twrapper.toggleForStorage(storage);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst closeGdprBanner = useFunction(\n\t\t\t() => wrapper.closeBanner(),\n\t\t\t[wrapper]\n\t\t);\n\t\tconst resetAndShowBanner = useFunction(\n\t\t\t() => wrapper.resetAndShowBanner(),\n\t\t\t[wrapper]\n\t\t);\n\t\tconst bannerWasShown = useGdprComputed(\n\t\t\t() => wrapper.bannerWasShown,\n\t\t\t[wrapper]\n\t\t);\n\n\t\treturn {\n\t\t\t// Meta\n\t\t\tcloseGdprBanner,\n\t\t\tresetAndShowBanner,\n\t\t\tbannerWasShown,\n\t\t\t// Manager\n\t\t\tmanager,\n\t\t\tenableManager,\n\t\t\tdisableManager,\n\t\t\ttoggleManager,\n\t\t\t// Guard/group\n\t\t\tenableGuard,\n\t\t\tdisableGuard,\n\t\t\ttoggleGuard,\n\t\t\tguardIsEnabled,\n\t\t\t// Storage\n\t\t\tenableForStorage,\n\t\t\tdisableForStorage,\n\t\t\ttoggleForStorage,\n\t\t};\n\t};\n\n\treturn {\n\t\tuseSetupGdprEffect,\n\t\tuseAttachGdprListenersEffect,\n\n\t\tuseGdprSavior,\n\t\tuseGdprManager,\n\t\tuseGdprComputed,\n\n\t\tuseGdprGuardEnabledState,\n\t\tuseGdprGuard,\n\t\tuseGdpr,\n\t};\n};\n","import { useEffect, useState } from \"react\";\n\nexport type StoreUpdater<Store> = (store: Store) => Store;\n\nexport type EmitterSubscription<Store> = (store: Store) => void;\n\nexport type StoreFactory<Store> = () => Store;\n\nexport type InitialStoreFactory<Store> = (\n\tget: StoreFactory<Store>,\n\tset: (updater: StoreUpdater<Store>) => Store\n) => Store;\n\nexport interface StoreHolder<Store> {\n\tstore: Store | null;\n}\n\n// cf. https://formidable.com/blog/2021/stores-no-context-api/\n\nconst createEmitter = <Store>() => {\n\tconst subscriptions = new Map<Symbol, EmitterSubscription<Store>>();\n\treturn {\n\t\temit: (store: Store) => subscriptions.forEach(fn => fn(store)),\n\t\tsubscribe: (fn: EmitterSubscription<Store>) => {\n\t\t\t// eslint-disable-next-line symbol-description\n\t\t\tconst key = Symbol();\n\t\t\tsubscriptions.set(key, fn);\n\t\t\treturn function () {\n\t\t\t\tsubscriptions.delete(key);\n\t\t\t};\n\t\t},\n\t};\n};\n\nexport type CreateGlobalStore<Store> = [\n\tstoreHolder: StoreHolder<Store>,\n\tuseStore: StoreFactory<Store>\n];\n\nexport const createGlobalStore = <Store>(\n\tinitialStoreFactory: InitialStoreFactory<Store>\n): CreateGlobalStore<Store> => {\n\t// create an emitter\n\tconst emitter = createEmitter<Store>();\n\n\tconst storeHolder: StoreHolder<Store> = {\n\t\tstore: null,\n\t};\n\tconst get = () => storeHolder.store!;\n\tconst set = (updater: StoreUpdater<Store>) => {\n\t\tstoreHolder.store = updater(get());\n\t\t// notify all subscriptions when the store updates\n\t\temitter.emit(storeHolder.store);\n\t\treturn storeHolder.store;\n\t};\n\tstoreHolder.store = initialStoreFactory(get, set);\n\n\tconst useLocalStore = () => {\n\t\t// intitialize component with latest store\n\t\tconst [localStore, setLocalStore] = useState<Store>(get());\n\n\t\t// update our local store when the global\n\t\t// store updates.\n\t\t//\n\t\t// emitter.subscribe returns a cleanup\n\t\t// function, so react will clean this\n\t\t// up on unmount.\n\t\tuseEffect(() => emitter.subscribe(setLocalStore), []);\n\t\treturn localStore;\n\t};\n\n\treturn [storeHolder, useLocalStore];\n};\n"],"names":["constructor","_manager","_globalStoreHolder","this","manager","materializedState","store","triggerUpdate","update","generateRawManager","bannerWasShown","events","closeBanner","resetAndShowBanner","json","toString","JSON","stringify","disable","target","wrap","enable","toggle","disableForStorage","storageType","enableForStorage","toggleForStorage","isEnabled","name","hasGroup","groupName","hasGuard","guardName","getGroup","getGuard","raw","hotswap","newManager","method","args","guard","SaviorWrapper","GdprSaviorAdapter","savior","managerWrapper","super","async","updateSharedManager","check","exists","shouldUpdate","restore","restoreOrCreate","factory","useFunction","fn","deps","useCallback","watch","inputs","useEffect","createGdprGuardHooks","managerFactory","dummyManager","GdprManager","create","globalStoreHolder","useGlobalStore","initialStoreFactory","emitter","emit","subscriptions","forEach","subscribe","Symbol","set","key","delete","createEmitter","storeHolder","get","updater","localStore","setLocalStore","useState","createGlobalStore","ManagerWrapper","saviorWrapper","useGdprManager","useWrappedManager","useGdprComputed","globalStore","useMemo","useSetupGdprEffect","onError","e","wrappingManager","wrappedManager","useRef","didMount","current","useEffectOnSecondRender","useAttachGdprListenersEffect","callback","useGdprSavior","useGdprGuardEnabledState","useBannerStatus","_managerWrapper$getGu","_managerWrapper$getGu2","enabled","useGdprGuard","_manager$getGuard","enableGuard","disableGuard","toggleGuard","useGdpr","wrapper","enableManager","disableManager","toggleManager","guardIsEnabled","storage","closeGdprBanner"],"mappings":"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"}