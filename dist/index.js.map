{"version":3,"file":"index.js","sources":["../src/globalState.ts","../src/ManagerWrapper.ts","../src/SaviorWrapper.ts","../src/index.ts"],"sourcesContent":["import { useEffect, useState, SetStateAction, Dispatch } from \"react\";\n\nexport type StoreUpdater<Store> = (store: Store) => Store;\n\nexport type EmitterSubscription<Store> = (store: Store) => void;\n\nexport type EmitterUnsubscriptionFunction = () => void;\n\nexport type StoreFactory<Store> = () => Store;\n\nexport type StoreHook<Store> = () => [\n\tstore: Store,\n\tsetStore: Dispatch<SetStateAction<Store>>\n];\n\nexport type InitialStoreFactory<Store> = (\n\tget: StoreFactory<Store>,\n\tset: (updater: StoreUpdater<Store>) => Store\n) => Store;\n\nexport interface StoreHolder<Store> {\n\tstore: Store | null;\n}\n\n// cf. https://formidable.com/blog/2021/stores-no-context-api/\n// cf. https://blog.axlight.com/posts/steps-to-develop-global-state-for-react/\n\nexport type CreateGlobalStore<Store> = [\n\tstoreHolder: StoreHolder<Store>,\n\tuseStore: StoreHook<Store>\n];\n\nexport const createGlobalStore = <Store>(\n\tinitialStoreFactory: InitialStoreFactory<Store>\n): CreateGlobalStore<Store> => {\n\tlet storeHolder: StoreHolder<Store> = {\n\t\tstore: null,\n\t};\n\tconst listeners = new Set<() => void>();\n\n\tconst get = () => storeHolder.store!;\n\tconst set = (updater: StoreUpdater<Store>) => {\n\t\tstoreHolder.store = updater(get());\n\t\tlisteners.forEach(listener => listener());\n\t\treturn storeHolder.store;\n\t};\n\n\tstoreHolder.store = initialStoreFactory(get, set);\n\n\tconst setGlobalStore = (nextStore: Store | ((prevStore: Store) => Store)) => {\n\t\tif (typeof nextStore !== \"function\") {\n\t\t\tnextStore = () => (nextStore as Store);\n\t\t}\n\n\t\tset(nextStore as (prevStore: Store) => Store);\n\t};\n\n\tconst useLocalStore: StoreHook<Store> = () => {\n\t\t// intitialize component with latest store\n\t\tconst [localStore, setLocalStore] = useState<Store>(get());\n\n\t\t// update our local store when the global\n\t\t// store updates.\n\t\t//\n\t\t// emitter.subscribe returns a cleanup\n\t\t// function, so react will clean this\n\t\t// up on unmount.\n\t\tuseEffect(() => {\n\t\t\tconst listener = () => {\n\t\t\t\tsetLocalStore(get());\n\t\t\t};\n\n\t\t\tlisteners.add(listener);\n\t\t\tlistener(); // in case it's already changed\n\t\t\treturn () => {\n\t\t\t\tlisteners.delete(listener);\n\t\t\t};\n\t\t}, []);\n\t\treturn [localStore, setGlobalStore];\n\t};\n\n\treturn [storeHolder, useLocalStore];\n};\n","import type {\n\tGdprManager,\n\tGdprManagerRaw,\n\tGdprGuard,\n\tGdprGuardGroup,\n\tGdprStorage,\n\tGdprManagerEventHub,\n} from \"gdpr-guard\";\n\nimport { StoreHolder } from \"./globalState\";\nimport type { MethodNamesOf } from \"./typings\";\nimport { ArgumentsOf } from \"./typings\";\n\nexport interface ReactGdprGuardGlobalStore {\n\tmaterializedState: GdprManagerRaw;\n\tupdate(manager: GdprManagerRaw): ReactGdprGuardGlobalStore;\n}\n\nexport class ManagerWrapper {\n\t/* eslint-disable no-useless-constructor, no-empty-function */\n\tconstructor(\n\t\tprotected _manager: GdprManager,\n\t\tprotected _globalStoreHolder: StoreHolder<ReactGdprGuardGlobalStore>\n\t) {}\n\t/* eslint-enable no-useless-constructor, no-empty-function */\n\n\tpublic get manager(): GdprManager {\n\t\treturn this._manager;\n\t}\n\n\tpublic get materializedState(): GdprManagerRaw {\n\t\treturn this._globalStoreHolder.store!.materializedState;\n\t}\n\n\tpublic triggerUpdate(): void {\n\t\tthis._globalStoreHolder.store!.update(this.generateRawManager());\n\t}\n\n\tpublic get bannerWasShown(): boolean {\n\t\treturn this.manager.bannerWasShown;\n\t}\n\n\tpublic get events(): GdprManagerEventHub {\n\t\treturn this.manager.events;\n\t}\n\n\tpublic closeBanner(): void {\n\t\tthis.manager.closeBanner();\n\t\tthis.triggerUpdate();\n\t}\n\n\tpublic resetAndShowBanner(): void {\n\t\tthis.manager.resetAndShowBanner();\n\t\tthis.triggerUpdate();\n\t}\n\n\tpublic json(): GdprManagerRaw {\n\t\treturn this.materializedState;\n\t}\n\n\tpublic toString(): string {\n\t\treturn JSON.stringify(this.materializedState);\n\t}\n\n\tpublic disable(target?: string): this {\n\t\treturn this.wrap(\"disable\", target);\n\t}\n\n\tpublic enable(target?: string): this {\n\t\treturn this.wrap(\"enable\", target);\n\t}\n\n\tpublic toggle(target?: string): this {\n\t\treturn this.wrap(\"toggle\", target);\n\t}\n\n\tpublic disableForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.disableForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic enableForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.enableForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic toggleForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.toggleForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic isEnabled(name: string): boolean {\n\t\treturn this.manager.isEnabled(name);\n\t}\n\n\tpublic hasGroup(groupName: string): boolean {\n\t\treturn this.manager.hasGroup(groupName);\n\t}\n\n\tpublic hasGuard(guardName: string): boolean {\n\t\treturn this.manager.hasGuard(guardName);\n\t}\n\n\tpublic getGroup(groupName: string): GdprGuardGroup | null {\n\t\treturn this.manager.getGroup(groupName);\n\t}\n\n\tpublic getGuard(guardName: string): GdprGuard | null {\n\t\treturn this.manager.getGuard(guardName);\n\t}\n\n\tprotected generateRawManager(): GdprManagerRaw {\n\t\treturn this.manager.raw();\n\t}\n\n\tpublic hotswap(newManager: GdprManager): this {\n\t\tthis._manager = newManager;\n\t\tthis.triggerUpdate();\n\t\treturn this;\n\t}\n\n\tprotected wrap<Method extends MethodNamesOf<GdprGuard>>(\n\t\tmethod: Method,\n\t\ttarget?: string,\n\t\t...args: ArgumentsOf<GdprGuard[Method]>\n\t): this {\n\t\tif (\n\t\t\ttypeof target === \"undefined\" &&\n\t\t\ttypeof this.manager[method] === \"function\"\n\t\t) {\n\t\t\t// False positive of TS2349 or TS2684\n\t\t\t// @ts-ignore\n\t\t\tthis.manager[method](...args);\n\t\t\tthis.triggerUpdate();\n\t\t} else if (this.manager.hasGuard(target!)) {\n\t\t\tconst guard = this.manager.getGuard(target!);\n\n\t\t\tif (typeof guard?.[method] === \"function\") {\n\t\t\t\t// False positive of TS2349 or TS2684\n\t\t\t\t// @ts-ignore\n\t\t\t\tguard?.[method](...args);\n\t\t\t\tthis.triggerUpdate();\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n}\n","import { GdprSaviorAdapter } from \"gdpr-guard\";\nimport type {\n\tGdprSavior,\n\tGdprManager,\n\tGdprManagerFactory,\n\tGdprManagerRaw,\n} from \"gdpr-guard\";\n\nimport type { ManagerWrapper } from \"./ManagerWrapper\";\n\nexport class SaviorWrapper extends GdprSaviorAdapter {\n\tconstructor(\n\t\tprotected savior: GdprSavior,\n\t\tprotected managerWrapper: ManagerWrapper\n\t) {\n\t\tsuper();\n\t}\n\n\tasync updateSharedManager(manager: GdprManager): Promise<void> {\n\t\tif (this.managerWrapper.manager === manager) return;\n\n\t\tawait this.savior.updateSharedManager(manager);\n\t\tthis.managerWrapper.hotswap(manager);\n\t}\n\n\t/// Delegates\n\tcheck() {\n\t\treturn this.savior.check();\n\t}\n\n\texists(shouldUpdate = true) {\n\t\treturn this.savior.exists(shouldUpdate);\n\t}\n\n\trestore(shouldUpdate = true) {\n\t\treturn this.savior.restore(shouldUpdate);\n\t}\n\n\trestoreOrCreate(factory: GdprManagerFactory) {\n\t\treturn this.savior.restoreOrCreate(factory);\n\t}\n\n\tstore(manager: GdprManagerRaw) {\n\t\treturn this.savior.store(manager);\n\t}\n}\n","import type {\n\tGdprManagerFactory,\n\tGdprManagerRaw,\n\tGdprSavior,\n\tGdprGuardRaw,\n\tGdprStorage,\n} from \"gdpr-guard\";\nimport { GdprManager } from \"gdpr-guard\";\nimport {\n\tDependencyList,\n\tuseRef,\n\tuseCallback,\n\tuseMemo,\n\tuseEffect,\n\tuseDebugValue, useState,\n} from \"react\";\n\nimport { createGlobalStore } from \"./globalState\";\nimport { ManagerWrapper, ReactGdprGuardGlobalStore } from \"./ManagerWrapper\";\nimport { SaviorWrapper } from \"./SaviorWrapper\";\nimport type {\n\tGdprGuardHooks,\n\tUseGdpr,\n\tUseSetupGdprEffect,\n\tUseGdprComputed,\n\tUseGdprGuard,\n\tUseGdprGuardEnabledState,\n\tUseGdprManager,\n\tUseGdprSavior,\n\tUseAttachGdprListenersEffect,\n} from \"./typings\";\nimport { glob } from \"typedoc/dist/lib/utils/fs\";\n\n/**\n * {@link useEffect} but that will only be triggered after one render/call attempt as already been made\n */\nconst useEffectOnSecondRender = <Fn extends (...args: any[]) => any>(\n\tfn: Fn,\n\tdeps: DependencyList = []\n) => {\n\tconst didMount = useRef(false);\n\n\tuseEffect(() => {\n\t\tif (didMount.current) {\n\t\t\tfn();\n\t\t\treturn;\n\t\t}\n\t\tdidMount.current = true;\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [...deps, fn]);\n};\n\n/**\n * Create hooks for the gdpr-guard library based on the provided {@link GdprSavior}\n * @param savior - The {@link GdprSavior} to wrap\n * @param managerFactory - A factory to the latest version of your {@link GdprManager}\n * @returns The React hooks associated to that {@link GdprSavior}\n */\nexport const createGdprGuardHooks = (\n\tsavior: GdprSavior,\n\tmanagerFactory: GdprManagerFactory\n): GdprGuardHooks => {\n\t// Use a dummy manager that'll be hotswap later after init\n\tconst dummyManager = GdprManager.create([]);\n\tconst [globalStoreHolder, useGlobalStore] =\n\t\tcreateGlobalStore<ReactGdprGuardGlobalStore>((get, set) => ({\n\t\t\tmaterializedState: dummyManager.raw(),\n\t\t\tupdate: (manager: GdprManagerRaw) => {\n\t\t\t\treturn set(store => ({ ...store, materializedState: manager }));\n\t\t\t},\n\t\t}));\n\n\tconst [, useUnderlyingManager] = createGlobalStore(() => dummyManager);\n\n\tconst managerWrapper = new ManagerWrapper(dummyManager, globalStoreHolder);\n\n\tconst saviorWrapper = new SaviorWrapper(savior, managerWrapper);\n\n\tconst useGdprSavior: UseGdprSavior = (): GdprSavior => saviorWrapper;\n\n\tconst useGdprManager: UseGdprManager = (): ManagerWrapper => managerWrapper;\n\n\t/**\n\t * For internal uses only\n\t */\n\tconst useWrappedManager = () => {\n\t\tconst [store] = useGlobalStore();\n\t\treturn useMemo(() => store.materializedState, [store]);\n\t};\n\n\tconst useSetupGdprEffect: UseSetupGdprEffect = onError => {\n\t\tconst wrappingManager = useGdprManager();\n\t\tconst [underlyingManager, setUnderlyingManager] = useUnderlyingManager();\n\t\tconst lastAutoClose = useRef<GdprManager|undefined>();\n\n\t\tconst restoreManagerOnBoot = useCallback(() => {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst manager = await saviorWrapper.restoreOrCreate(\n\t\t\t\t\t\tmanagerFactory\n\t\t\t\t\t);\n\n\t\t\t\t\twrappingManager.hotswap(manager);\n\t\t\t\t\tsetUnderlyingManager(manager);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonError?.(e);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\treturn () => {};\n\t\t}, [onError, wrappingManager]);\n\n\t\tuseEffectOnSecondRender(restoreManagerOnBoot);\n\n\t\t// Auto-close\n\t\tuseEffect(() => {\n\t\t\tif (lastAutoClose.current !== underlyingManager && wrappingManager.bannerWasShown) {\n\t\t\t\tlastAutoClose.current =  wrappingManager.manager;\n\t\t\t\twrappingManager.closeBanner();\n\t\t\t}\n\t\t}, [underlyingManager, wrappingManager]);\n\t};\n\n\tconst useGdprComputed: UseGdprComputed = <T>(\n\t\tfactory: () => T,\n\t\tdeps: DependencyList = []\n\t): T => {\n\t\tconst globalStore = useGlobalStore();\n\n\t\treturn useMemo(factory, [...deps, factory, globalStore /*, fn*/]);\n\t};\n\n\tconst useAttachGdprListenersEffect: UseAttachGdprListenersEffect =\n\t\tcallback => {\n\t\t\tconst manager = useGdprManager();\n\t\t\tconst [underlyingManager] = useUnderlyingManager();\n\n\t\t\tuseEffect(() => {\n\t\t\t\treturn callback(manager.events, underlyingManager || manager.manager);\n\t\t\t}, [callback, manager.events, manager.manager, underlyingManager]);\n\t\t};\n\n\tconst useGdprGuardEnabledState: UseGdprGuardEnabledState = (\n\t\tguardName: string,\n\t\tuseBannerStatus: boolean = false\n\t) => {\n\t\treturn useGdprComputed(() => {\n\t\t\tconst bannerWasShown =\n\t\t\t\t!useBannerStatus || managerWrapper.bannerWasShown;\n\n\t\t\treturn (\n\t\t\t\tbannerWasShown &&\n\t\t\t\t(managerWrapper.getGuard(guardName)?.enabled ?? false)\n\t\t\t);\n\t\t}, [guardName, managerWrapper.bannerWasShown]);\n\t};\n\n\tconst useGdprGuard: UseGdprGuard = (guardName: string) => {\n\t\tconst manager = useGdprManager();\n\n\t\tconst guard = useGdprComputed(() => {\n\t\t\treturn manager.getGuard(guardName)?.raw();\n\t\t}, [guardName, manager]) as GdprGuardRaw | null;\n\n\t\tconst enableGuard = useCallback(() => {\n\t\t\tmanager.enable(guardName);\n\t\t}, [guardName, manager]);\n\n\t\tconst disableGuard = useCallback(() => {\n\t\t\tmanager.disable(guardName);\n\t\t}, [guardName, manager]);\n\n\t\tconst toggleGuard = useCallback(() => {\n\t\t\tmanager.toggle(guardName);\n\t\t}, [guardName, manager]);\n\n\t\tuseDebugValue(guardName);\n\n\t\treturn {\n\t\t\tguard,\n\t\t\tenableGuard,\n\t\t\tdisableGuard,\n\t\t\ttoggleGuard,\n\t\t};\n\t};\n\n\tconst useGdpr: UseGdpr = () => {\n\t\tconst wrapper = useGdprManager();\n\n\t\t// Manager\n\t\tconst manager = useGdprComputed(\n\t\t\t() => wrapper.materializedState,\n\t\t\t[wrapper, wrapper.materializedState]\n\t\t);\n\n\t\tconst enableManager = useCallback(() => {\n\t\t\twrapper.enable();\n\t\t}, [wrapper]);\n\n\t\tconst disableManager = useCallback(() => {\n\t\t\twrapper.disable();\n\t\t}, [wrapper]);\n\n\t\tconst toggleManager = useCallback(() => {\n\t\t\twrapper.toggle();\n\t\t}, [wrapper]);\n\n\t\t// Guard/group\n\t\tconst enableGuard = useCallback(\n\t\t\t(guardName: string) => {\n\t\t\t\twrapper.enable(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst disableGuard = useCallback(\n\t\t\t(guardName: string) => {\n\t\t\t\twrapper.disable(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst toggleGuard = useCallback(\n\t\t\t(guardName: string) => {\n\t\t\t\twrapper.toggle(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst guardIsEnabled = useCallback(\n\t\t\t(guardName: string, useBannerStatus: boolean = false) => {\n\t\t\t\tconst bannerWasShown =\n\t\t\t\t\t!useBannerStatus || wrapper.bannerWasShown;\n\t\t\t\treturn bannerWasShown && wrapper.isEnabled(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\t// Storage\n\t\tconst enableForStorage = useCallback(\n\t\t\t(storage: GdprStorage) => {\n\t\t\t\twrapper.enableForStorage(storage);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst disableForStorage = useCallback(\n\t\t\t(storage: GdprStorage) => {\n\t\t\t\twrapper.disableForStorage(storage);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst toggleForStorage = useCallback(\n\t\t\t(storage: GdprStorage) => {\n\t\t\t\twrapper.toggleForStorage(storage);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst closeGdprBanner = useCallback(\n\t\t\t() => wrapper.closeBanner(),\n\t\t\t[wrapper]\n\t\t);\n\t\tconst resetAndShowBanner = useCallback(\n\t\t\t() => wrapper.resetAndShowBanner(),\n\t\t\t[wrapper]\n\t\t);\n\t\tconst bannerWasShown = useGdprComputed(\n\t\t\t() => wrapper.bannerWasShown,\n\t\t\t[wrapper]\n\t\t);\n\n\t\treturn {\n\t\t\t// Meta\n\t\t\tcloseGdprBanner,\n\t\t\tresetAndShowBanner,\n\t\t\tbannerWasShown,\n\t\t\t// Manager\n\t\t\tmanager,\n\t\t\tenableManager,\n\t\t\tdisableManager,\n\t\t\ttoggleManager,\n\t\t\t// Guard/group\n\t\t\tenableGuard,\n\t\t\tdisableGuard,\n\t\t\ttoggleGuard,\n\t\t\tguardIsEnabled,\n\t\t\t// Storage\n\t\t\tenableForStorage,\n\t\t\tdisableForStorage,\n\t\t\ttoggleForStorage,\n\t\t};\n\t};\n\n\treturn {\n\t\tuseSetupGdprEffect,\n\t\tuseAttachGdprListenersEffect,\n\n\t\tuseGdprSavior,\n\t\tuseGdprManager,\n\t\tuseGdprComputed,\n\n\t\tuseGdprGuardEnabledState,\n\t\tuseGdprGuard,\n\t\tuseGdpr,\n\t};\n};\n"],"names":["createGlobalStore","initialStoreFactory","storeHolder","store","listeners","Set","get","set","updater","forEach","listener","setGlobalStore","nextStore","_useState","useState","localStore","setLocalStore","useEffect","add","ManagerWrapper","_manager","_globalStoreHolder","this","_proto","prototype","triggerUpdate","update","generateRawManager","closeBanner","manager","resetAndShowBanner","json","materializedState","toString","JSON","stringify","disable","target","wrap","enable","toggle","disableForStorage","storageType","enableForStorage","toggleForStorage","isEnabled","name","hasGroup","groupName","hasGuard","guardName","getGroup","getGuard","raw","hotswap","newManager","method","_this$manager","args","slice","call","arguments","apply","guard","key","bannerWasShown","events","SaviorWrapper","_GdprSaviorAdapter","savior","managerWrapper","_this","updateSharedManager","_this2","Promise","resolve","then","e","reject","check","exists","shouldUpdate","restore","restoreOrCreate","factory","GdprSaviorAdapter","managerFactory","dummyManager","GdprManager","create","_createGlobalStore","_extends","globalStoreHolder","useGlobalStore","useUnderlyingManager","saviorWrapper","useGdprManager","useGdprComputed","deps","globalStore","useMemo","concat","useSetupGdprEffect","onError","wrappingManager","_useUnderlyingManager","underlyingManager","setUnderlyingManager","lastAutoClose","useRef","fn","didMount","current","useEffectOnSecondRender","useCallback","_temp","_catch","useAttachGdprListenersEffect","callback","useGdprSavior","useGdprGuardEnabledState","useBannerStatus","_managerWrapper$getGu","_managerWrapper$getGu2","enabled","useGdprGuard","_manager$getGuard","enableGuard","disableGuard","toggleGuard","useDebugValue","useGdpr","wrapper","enableManager","disableManager","toggleManager","guardIsEnabled","storage","closeGdprBanner"],"mappings":"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"}