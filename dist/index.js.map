{"version":3,"file":"index.js","sources":["../src/ManagerWrapper.ts","../src/SaviorWrapper.ts","../src/index.ts"],"sourcesContent":["import type {\n\tGdprManager,\n\tGdprManagerRaw,\n\tGdprGuard,\n\tGdprGuardGroup,\n\tGdprStorage,\n} from \"gdpr-guard\";\nimport type { GdprManagerEventHub } from \"gdpr-guard/dist/GdprManagerEventHub\";\n\nimport type { MethodNamesOf } from \"./typings\";\n\nexport class ManagerWrapper {\n\tprotected state: GdprManagerRaw;\n\n\tconstructor(protected _manager: GdprManager) {\n\t\tthis.state = this.generateRawManager();\n\t}\n\n\tpublic get manager(): GdprManager {\n\t\treturn this._manager;\n\t}\n\n\tpublic get materializedState(): GdprManagerRaw {\n\t\treturn this.state;\n\t}\n\n\tpublic triggerUpdate(): void {\n\t\tthis.state = this.generateRawManager();\n\t}\n\n\tpublic get bannerWasShown(): boolean {\n\t\treturn this.manager.bannerWasShown;\n\t}\n\n\tpublic get events(): GdprManagerEventHub {\n\t\treturn this.manager.events;\n\t}\n\n\tpublic closeBanner(): void {\n\t\tthis.manager.closeBanner();\n\t\tthis.triggerUpdate();\n\t}\n\n\tpublic resetAndShowBanner(): void {\n\t\tthis.manager.resetAndShowBanner();\n\t\tthis.triggerUpdate();\n\t}\n\n\tpublic json(): GdprManagerRaw {\n\t\treturn this.materializedState;\n\t}\n\n\tpublic toString(): string {\n\t\treturn JSON.stringify(this.materializedState);\n\t}\n\n\tpublic disable(target?: string): this {\n\t\treturn this.wrap(\"disable\", target);\n\t}\n\n\tpublic enable(target?: string): this {\n\t\treturn this.wrap(\"enable\", target);\n\t}\n\n\tpublic toggle(target?: string): this {\n\t\treturn this.wrap(\"toggle\", target);\n\t}\n\n\tpublic disableForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.disableForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic enableForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.enableForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic toggleForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.toggleForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic isEnabled(name: string): boolean {\n\t\treturn this.manager.isEnabled(name);\n\t}\n\n\tpublic hasGroup(groupName: string): boolean {\n\t\treturn this.manager.hasGroup(groupName);\n\t}\n\n\tpublic hasGuard(guardName: string): boolean {\n\t\treturn this.manager.hasGuard(guardName);\n\t}\n\n\tpublic getGroup(groupName: string): GdprGuardGroup | null {\n\t\treturn this.manager.getGroup(groupName);\n\t}\n\n\tpublic getGuard(guardName: string): GdprGuard | null {\n\t\treturn this.manager.getGuard(guardName);\n\t}\n\n\tprotected generateRawManager(): GdprManagerRaw {\n\t\treturn this.manager.raw();\n\t}\n\n\tpublic hotswap(newManager: GdprManager): this {\n\t\tthis._manager = newManager;\n\t\tthis.triggerUpdate();\n\t\treturn this;\n\t}\n\n\tprotected wrap(\n\t\tmethod: MethodNamesOf<GdprGuard>,\n\t\ttarget?: string,\n\t\t...args: unknown[]\n\t): this {\n\t\tif (\n\t\t\ttypeof target === \"undefined\" &&\n\t\t\ttypeof this.manager[method] === \"function\"\n\t\t) {\n\t\t\t// False positive of TS2349\n\t\t\tthis.manager[method as unknown as string](...args);\n\t\t\tthis.triggerUpdate();\n\t\t} else if (this.manager.hasGuard(target as string)) {\n\t\t\tconst guard = this.manager.getGuard(target as string);\n\n\t\t\tif (typeof guard?.[method] === \"function\") {\n\t\t\t\t// False positive of TS2349\n\t\t\t\tguard?.[method as unknown as string](...args);\n\t\t\t\tthis.triggerUpdate();\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n}\n","import { GdprSaviorAdapter } from \"gdpr-guard\";\nimport type {\n\tGdprSavior,\n\tGdprManager,\n\tGdprManagerFactory,\n\tGdprManagerRaw,\n} from \"gdpr-guard\";\n\nimport type { ManagerWrapper } from \"./ManagerWrapper\";\n\nexport class SaviorWrapper extends GdprSaviorAdapter {\n\tconstructor(\n\t\tprotected savior: GdprSavior,\n\t\tprotected managerWrapper: ManagerWrapper\n\t) {\n\t\tsuper();\n\t}\n\n\tasync updateSharedManager(manager: GdprManager): Promise<void> {\n\t\tif (this.managerWrapper.manager === manager) return;\n\n\t\tawait this.savior.updateSharedManager(manager);\n\t\tthis.managerWrapper.hotswap(manager);\n\t}\n\n\t/// Delegates\n\tcheck() {\n\t\treturn this.savior.check();\n\t}\n\n\texists(shouldUpdate = true) {\n\t\treturn this.savior.exists(shouldUpdate);\n\t}\n\n\trestore(shouldUpdate = true) {\n\t\treturn this.savior.restore(shouldUpdate);\n\t}\n\n\trestoreOrCreate(factory: GdprManagerFactory) {\n\t\treturn this.savior.restoreOrCreate(factory);\n\t}\n\n\tstore(manager: GdprManagerRaw) {\n\t\treturn this.savior.store(manager);\n\t}\n}\n","import { GdprManager } from \"gdpr-guard\";\nimport { GdprManagerEventHub } from \"gdpr-guard/dist/GdprManagerEventHub\";\nimport { DependencyList, useRef, useCallback, useMemo, useEffect } from \"react\";\n\nimport { ManagerWrapper } from \"./ManagerWrapper\";\nimport { SaviorWrapper } from \"./SaviorWrapper\";\nimport type {\n\tGdprSavior,\n\tGdprGuardRaw,\n\tGdprStorage,\n\tGdprManagerFactory,\n\tGdprGuardHooks,\n\tUseGdpr,\n\tUseSetupGdprEffect,\n\tUseGdprComputed,\n\tUseGdprGuard,\n\tUseGdprGuardEnabledState,\n\tUseGdprManager,\n\tUseGdprSavior,\n\tUseAttachGdprListenersEffect,\n} from \"./typings\";\n\nconst useFunction = <Fn extends (...args: any[]) => any>(\n\tfn: Fn,\n\tdeps: DependencyList = []\n): Fn => {\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\treturn useCallback(fn, deps);\n};\n\nconst useEffectOnSecondRender = <Fn extends (...args: any[]) => any>(\n\tfn: Fn,\n\tdeps: DependencyList = []\n) => {\n\tconst didMount = useRef(false);\n\n\tuseEffect(() => {\n\t\tif (didMount.current) {\n\t\t\tfn();\n\t\t}\n\t\tdidMount.current = true;\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [...deps, fn, didMount]);\n};\n\n/**\n * Create hooks for the gdpr-guard library based on the provided {@link GdprSavior}\n * @param savior - The {@link GdprSavior} to wrap\n * @param managerFactory - A factory to the latest version of your {@link GdprManager}\n * @returns The React hooks associated to that {@link GdprSavior}\n */\nexport const createGdprGuardHooks = (\n\tsavior: GdprSavior,\n\tmanagerFactory: GdprManagerFactory\n): GdprGuardHooks => {\n\t// Use a dummy manager that'll be hotswap later after init\n\tconst dummyManager = GdprManager.create([]);\n\tconst managerWrapper = new ManagerWrapper(dummyManager);\n\n\tconst saviorWrapper = new SaviorWrapper(savior, managerWrapper);\n\n\tconst useSetupGdprEffect: UseSetupGdprEffect = () => {\n\t\tconst restoreManagerOnBoot = useFunction(() => {\n\t\t\t(async () => {\n\t\t\t\tawait saviorWrapper.restoreOrCreate(managerFactory);\n\t\t\t})();\n\t\t});\n\n\t\tuseEffectOnSecondRender(restoreManagerOnBoot);\n\n\t\t// Auto-close\n\t\tuseEffect(() => {\n\t\t\tif (managerWrapper.bannerWasShown) {\n\t\t\t\tmanagerWrapper.closeBanner();\n\t\t\t}\n\t\t}, [managerWrapper.manager]);\n\t};\n\n\tconst useGdprComputed: UseGdprComputed = <T>(\n\t\tfactory: () => T,\n\t\tdeps: DependencyList = []\n\t): T => {\n\t\tconst fn = useFunction(factory, deps);\n\n\t\treturn useMemo(fn, [managerWrapper.materializedState, fn]);\n\t};\n\n\tconst useGdprSavior: UseGdprSavior = (): GdprSavior => saviorWrapper;\n\n\tconst useGdprManager: UseGdprManager = (): ManagerWrapper => managerWrapper;\n\n\tconst useAttachGdprListenersEffect: UseAttachGdprListenersEffect = (\n\t\tcallback: (eventHub: GdprManagerEventHub) => void\n\t) => {\n\t\tconst manager = useGdprManager();\n\n\t\tuseEffect(() => {\n\t\t\tconst { events } = manager.manager;\n\t\t\tcallback(events);\n\t\t}, [callback, manager.manager]);\n\t};\n\n\tconst useGdprGuardEnabledState: UseGdprGuardEnabledState = (\n\t\tguardName: string,\n\t\tuseBannerStatus: boolean = false\n\t) => {\n\t\treturn useGdprComputed(() => {\n\t\t\tconst bannerWasShown = useBannerStatus\n\t\t\t\t? managerWrapper.bannerWasShown\n\t\t\t\t: true;\n\n\t\t\treturn (\n\t\t\t\tbannerWasShown &&\n\t\t\t\t(managerWrapper.getGuard(guardName)?.enabled ?? false)\n\t\t\t);\n\t\t}, [guardName, managerWrapper.bannerWasShown]);\n\t};\n\n\tconst useGdprGuard: UseGdprGuard = (guardName: string) => {\n\t\tconst guard = useGdprComputed(() => {\n\t\t\treturn managerWrapper.getGuard(guardName)?.raw();\n\t\t}, [guardName]) as GdprGuardRaw | null;\n\n\t\tconst enableGuard = useFunction(() => {\n\t\t\tmanagerWrapper.enable(guardName);\n\t\t}, [guardName]);\n\n\t\tconst disableGuard = useFunction(() => {\n\t\t\tmanagerWrapper.disable(guardName);\n\t\t}, [guardName]);\n\n\t\tconst toggleGuard = useFunction(() => {\n\t\t\tmanagerWrapper.toggle(guardName);\n\t\t}, [guardName]);\n\n\t\treturn {\n\t\t\tguard,\n\t\t\tenableGuard,\n\t\t\tdisableGuard,\n\t\t\ttoggleGuard,\n\t\t};\n\t};\n\n\tconst useGdpr: UseGdpr = () => {\n\t\t// Manager\n\t\tconst manager = useGdprComputed(() => managerWrapper.materializedState);\n\n\t\tconst enableManager = useFunction(() => {\n\t\t\tmanagerWrapper.enable();\n\t\t});\n\n\t\tconst disableManager = useFunction(() => {\n\t\t\tmanagerWrapper.disable();\n\t\t});\n\n\t\tconst toggleManager = useFunction(() => {\n\t\t\tmanagerWrapper.toggle();\n\t\t});\n\n\t\t// Guard/group\n\t\tconst enableGuard = useFunction((guardName: string) => {\n\t\t\tmanagerWrapper.enable(guardName);\n\t\t});\n\n\t\tconst disableGuard = useFunction((guardName: string) => {\n\t\t\tmanagerWrapper.disable(guardName);\n\t\t});\n\n\t\tconst toggleGuard = useFunction((guardName: string) => {\n\t\t\tmanagerWrapper.toggle(guardName);\n\t\t});\n\n\t\tconst guardIsEnabled = useFunction(\n\t\t\t(guardName: string, useBannerStatus: boolean = false) => {\n\t\t\t\tconst bannerWasShown = useBannerStatus\n\t\t\t\t\t? managerWrapper.bannerWasShown\n\t\t\t\t\t: true;\n\t\t\t\treturn bannerWasShown && managerWrapper.isEnabled(guardName);\n\t\t\t}\n\t\t);\n\n\t\t// Storage\n\t\tconst enableForStorage = useFunction((storage: GdprStorage) => {\n\t\t\tmanagerWrapper.enableForStorage(storage);\n\t\t});\n\n\t\tconst disableForStorage = useFunction((storage: GdprStorage) => {\n\t\t\tmanagerWrapper.disableForStorage(storage);\n\t\t});\n\n\t\tconst toggleForStorage = useFunction((storage: GdprStorage) => {\n\t\t\tmanagerWrapper.toggleForStorage(storage);\n\t\t});\n\n\t\tconst closeGdprBanner = useFunction(() => managerWrapper.closeBanner());\n\t\tconst resetAndShowBanner = useFunction(() =>\n\t\t\tmanagerWrapper.resetAndShowBanner()\n\t\t);\n\t\tconst bannerWasShown = useGdprComputed(\n\t\t\t() => managerWrapper.bannerWasShown\n\t\t);\n\n\t\treturn {\n\t\t\t// Meta\n\t\t\tcloseGdprBanner,\n\t\t\tresetAndShowBanner,\n\t\t\tbannerWasShown,\n\t\t\t// Manager\n\t\t\tmanager,\n\t\t\tenableManager,\n\t\t\tdisableManager,\n\t\t\ttoggleManager,\n\t\t\t// Guard/group\n\t\t\tenableGuard,\n\t\t\tdisableGuard,\n\t\t\ttoggleGuard,\n\t\t\tguardIsEnabled,\n\t\t\t// Storage\n\t\t\tenableForStorage,\n\t\t\tdisableForStorage,\n\t\t\ttoggleForStorage,\n\t\t};\n\t};\n\n\treturn {\n\t\tuseSetupGdprEffect,\n\t\tuseAttachGdprListenersEffect,\n\n\t\tuseGdprSavior,\n\t\tuseGdprManager,\n\t\tuseGdprComputed,\n\n\t\tuseGdprGuardEnabledState,\n\t\tuseGdprGuard,\n\t\tuseGdpr,\n\t};\n};\n"],"names":["_manager","this","state","generateRawManager","triggerUpdate","closeBanner","manager","resetAndShowBanner","json","materializedState","toString","stringify","disable","target","wrap","enable","toggle","disableForStorage","storageType","enableForStorage","toggleForStorage","isEnabled","name","hasGroup","groupName","hasGuard","guardName","getGroup","getGuard","raw","hotswap","newManager","method","args","guard","bannerWasShown","events","savior","managerWrapper","_this","updateSharedManager","_this3","check","exists","shouldUpdate","restore","restoreOrCreate","factory","store","GdprSaviorAdapter","fn","deps","managerFactory","GdprManager","create","dummyManager","useFunction","useSetupGdprEffect","useRef","useEffect","didMount","current","useEffectOnSecondRender","saviorWrapper","useAttachGdprListenersEffect","callback","useGdprManager","useGdprSavior","useGdprComputed","useGdprGuardEnabledState","useBannerStatus","_managerWrapper$getGu2","enabled","useGdprGuard","_managerWrapper$getGu3","enableGuard","disableGuard","toggleGuard","useGdpr","storage","closeGdprBanner","enableManager","disableManager","toggleManager","guardIsEnabled"],"mappings":"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"}