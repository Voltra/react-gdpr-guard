{"version":3,"file":"index.umd.js","sources":["../src/globalState.ts","../src/ManagerWrapper.ts","../src/SaviorWrapper.ts","../src/index.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport type StoreUpdater<Store> = (store: Store) => Store;\n\nexport type EmitterSubscription<Store> = (store: Store) => void;\n\nexport type StoreFactory<Store> = () => Store;\n\nexport type InitialStoreFactory<Store> = (\n\tget: StoreFactory<Store>,\n\tset: (updater: StoreUpdater<Store>) => Store\n) => Store;\n\nexport interface StoreHolder<Store> {\n\tstore: Store | null;\n}\n\n// cf. https://formidable.com/blog/2021/stores-no-context-api/\n\nconst createEmitter = <Store>() => {\n\tconst subscriptions = new Map<Symbol, EmitterSubscription<Store>>();\n\treturn {\n\t\temit: (store: Store) => subscriptions.forEach(fn => fn(store)),\n\t\tsubscribe: (fn: EmitterSubscription<Store>) => {\n\t\t\t// eslint-disable-next-line symbol-description\n\t\t\tconst key = Symbol();\n\t\t\tsubscriptions.set(key, fn);\n\t\t\treturn function () {\n\t\t\t\tsubscriptions.delete(key);\n\t\t\t};\n\t\t},\n\t};\n};\n\nexport type CreateGlobalStore<Store> = [\n\tstoreHolder: StoreHolder<Store>,\n\tuseStore: StoreFactory<Store>\n];\n\nexport const createGlobalStore = <Store>(\n\tinitialStoreFactory: InitialStoreFactory<Store>\n): CreateGlobalStore<Store> => {\n\t// create an emitter\n\tconst emitter = createEmitter<Store>();\n\n\tconst storeHolder: StoreHolder<Store> = {\n\t\tstore: null,\n\t};\n\tconst get = () => storeHolder.store!;\n\tconst set = (updater: StoreUpdater<Store>) => {\n\t\tstoreHolder.store = updater(get());\n\t\t// notify all subscriptions when the store updates\n\t\temitter.emit(storeHolder.store);\n\t\treturn storeHolder.store;\n\t};\n\tstoreHolder.store = initialStoreFactory(get, set);\n\n\tconst useLocalStore = () => {\n\t\t// intitialize component with latest store\n\t\tconst [localStore, setLocalStore] = useState<Store>(get());\n\n\t\t// update our local store when the global\n\t\t// store updates.\n\t\t//\n\t\t// emitter.subscribe returns a cleanup\n\t\t// function, so react will clean this\n\t\t// up on unmount.\n\t\tuseEffect(() => emitter.subscribe(setLocalStore), []);\n\t\treturn localStore;\n\t};\n\n\treturn [storeHolder, useLocalStore];\n};\n","import type {\n\tGdprManager,\n\tGdprManagerRaw,\n\tGdprGuard,\n\tGdprGuardGroup,\n\tGdprStorage,\n\tGdprManagerEventHub,\n} from \"gdpr-guard\";\n\nimport type { MethodNamesOf } from \"./typings\";\nimport { ArgumentsOf } from \"./typings\";\nimport { StoreHolder } from \"./globalState\";\n\nexport interface ReactGdprGuardGlobalStore {\n\tmaterializedState: GdprManagerRaw;\n\tupdate(manager: GdprManagerRaw): ReactGdprGuardGlobalStore;\n}\n\nexport class ManagerWrapper {\n\t/* eslint-disable no-useless-constructor, no-empty-function */\n\tconstructor(\n\t\tprotected _manager: GdprManager,\n\t\tprotected _globalStoreHolder: StoreHolder<ReactGdprGuardGlobalStore>\n\t) {}\n\t/* eslint-enable no-useless-constructor, no-empty-function */\n\n\tpublic get manager(): GdprManager {\n\t\treturn this._manager;\n\t}\n\n\tpublic get materializedState(): GdprManagerRaw {\n\t\treturn this._globalStoreHolder.store!.materializedState;\n\t}\n\n\tpublic triggerUpdate(): void {\n\t\tthis._globalStoreHolder.store!.update(this.generateRawManager());\n\t}\n\n\tpublic get bannerWasShown(): boolean {\n\t\treturn this.manager.bannerWasShown;\n\t}\n\n\tpublic get events(): GdprManagerEventHub {\n\t\treturn this.manager.events;\n\t}\n\n\tpublic closeBanner(): void {\n\t\tthis.manager.closeBanner();\n\t\tthis.triggerUpdate();\n\t}\n\n\tpublic resetAndShowBanner(): void {\n\t\tthis.manager.resetAndShowBanner();\n\t\tthis.triggerUpdate();\n\t}\n\n\tpublic json(): GdprManagerRaw {\n\t\treturn this.materializedState;\n\t}\n\n\tpublic toString(): string {\n\t\treturn JSON.stringify(this.materializedState);\n\t}\n\n\tpublic disable(target?: string): this {\n\t\treturn this.wrap(\"disable\", target);\n\t}\n\n\tpublic enable(target?: string): this {\n\t\treturn this.wrap(\"enable\", target);\n\t}\n\n\tpublic toggle(target?: string): this {\n\t\treturn this.wrap(\"toggle\", target);\n\t}\n\n\tpublic disableForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.disableForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic enableForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.enableForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic toggleForStorage(storageType: GdprStorage): this {\n\t\tthis.manager.toggleForStorage(storageType);\n\t\treturn this;\n\t}\n\n\tpublic isEnabled(name: string): boolean {\n\t\treturn this.manager.isEnabled(name);\n\t}\n\n\tpublic hasGroup(groupName: string): boolean {\n\t\treturn this.manager.hasGroup(groupName);\n\t}\n\n\tpublic hasGuard(guardName: string): boolean {\n\t\treturn this.manager.hasGuard(guardName);\n\t}\n\n\tpublic getGroup(groupName: string): GdprGuardGroup | null {\n\t\treturn this.manager.getGroup(groupName);\n\t}\n\n\tpublic getGuard(guardName: string): GdprGuard | null {\n\t\treturn this.manager.getGuard(guardName);\n\t}\n\n\tprotected generateRawManager(): GdprManagerRaw {\n\t\treturn this.manager.raw();\n\t}\n\n\tpublic hotswap(newManager: GdprManager): this {\n\t\tthis._manager = newManager;\n\t\tthis.triggerUpdate();\n\t\treturn this;\n\t}\n\n\tprotected wrap<Method extends MethodNamesOf<GdprGuard>>(\n\t\tmethod: Method,\n\t\ttarget?: string,\n\t\t...args: ArgumentsOf<GdprGuard[Method]>\n\t): this {\n\t\tif (\n\t\t\ttypeof target === \"undefined\" &&\n\t\t\ttypeof this.manager[method] === \"function\"\n\t\t) {\n\t\t\t// False positive of TS2349 or TS2684\n\t\t\t// @ts-ignore\n\t\t\tthis.manager[method](...args);\n\t\t\tthis.triggerUpdate();\n\t\t} else if (this.manager.hasGuard(target as string)) {\n\t\t\tconst guard = this.manager.getGuard(target as string);\n\n\t\t\tif (typeof guard?.[method] === \"function\") {\n\t\t\t\t// False positive of TS2349 or TS2684\n\t\t\t\t// @ts-ignore\n\t\t\t\tguard?.[method](...args);\n\t\t\t\tthis.triggerUpdate();\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n}\n","import { GdprSaviorAdapter } from \"gdpr-guard\";\nimport type {\n\tGdprSavior,\n\tGdprManager,\n\tGdprManagerFactory,\n\tGdprManagerRaw,\n} from \"gdpr-guard\";\n\nimport type { ManagerWrapper } from \"./ManagerWrapper\";\n\nexport class SaviorWrapper extends GdprSaviorAdapter {\n\tconstructor(\n\t\tprotected savior: GdprSavior,\n\t\tprotected managerWrapper: ManagerWrapper\n\t) {\n\t\tsuper();\n\t}\n\n\tasync updateSharedManager(manager: GdprManager): Promise<void> {\n\t\tif (this.managerWrapper.manager === manager) return;\n\n\t\tawait this.savior.updateSharedManager(manager);\n\t\tthis.managerWrapper.hotswap(manager);\n\t}\n\n\t/// Delegates\n\tcheck() {\n\t\treturn this.savior.check();\n\t}\n\n\texists(shouldUpdate = true) {\n\t\treturn this.savior.exists(shouldUpdate);\n\t}\n\n\trestore(shouldUpdate = true) {\n\t\treturn this.savior.restore(shouldUpdate);\n\t}\n\n\trestoreOrCreate(factory: GdprManagerFactory) {\n\t\treturn this.savior.restoreOrCreate(factory);\n\t}\n\n\tstore(manager: GdprManagerRaw) {\n\t\treturn this.savior.store(manager);\n\t}\n}\n","import type {\n\tGdprManagerFactory,\n\tGdprManagerRaw,\n\tGdprSavior,\n\tGdprManagerEventHub,\n\tGdprGuardRaw,\n\tGdprStorage,\n} from \"gdpr-guard\";\nimport { GdprManager } from \"gdpr-guard\";\nimport { DependencyList, useRef, useCallback, useMemo, useEffect } from \"react\";\n\nimport { createGlobalStore } from \"./globalState\";\nimport { ManagerWrapper, ReactGdprGuardGlobalStore } from \"./ManagerWrapper\";\nimport { SaviorWrapper } from \"./SaviorWrapper\";\nimport type {\n\tGdprGuardHooks,\n\tUseGdpr,\n\tUseSetupGdprEffect,\n\tUseGdprComputed,\n\tUseGdprGuard,\n\tUseGdprGuardEnabledState,\n\tUseGdprManager,\n\tUseGdprSavior,\n\tUseAttachGdprListenersEffect,\n} from \"./typings\";\n\n/**\n * Semantic wrapper around {@link useCallback}\n */\nconst useFunction = <Fn extends (...args: any[]) => any>(\n\tfn: Fn,\n\tdeps: DependencyList = []\n): Fn => {\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\treturn useCallback(fn, deps);\n};\n\n/**\n * {@link useEffect} but that will only be triggered after one render/call attempt as already been made\n */\nconst useEffectOnSecondRender = <Fn extends (...args: any[]) => any>(\n\tfn: Fn,\n\tdeps: DependencyList = []\n) => {\n\tconst didMount = useRef(false);\n\n\tuseEffect(() => {\n\t\tif (didMount.current) {\n\t\t\tfn();\n\t\t\treturn;\n\t\t}\n\t\tdidMount.current = true;\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [...deps, fn, didMount]);\n};\n\n/**\n * Semantic wrapper around {@link useEffect} used to call a function when one of the dependency changes\n * regardless of whether that dependency is used in the function or not\n */\nconst watch = <Fn extends (...args: any[]) => any>(\n\tinputs: DependencyList,\n\tfn: Fn\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\n) => useEffect(fn, inputs);\n\n/**\n * Create hooks for the gdpr-guard library based on the provided {@link GdprSavior}\n * @param savior - The {@link GdprSavior} to wrap\n * @param managerFactory - A factory to the latest version of your {@link GdprManager}\n * @returns The React hooks associated to that {@link GdprSavior}\n */\nexport const createGdprGuardHooks = (\n\tsavior: GdprSavior,\n\tmanagerFactory: GdprManagerFactory\n): GdprGuardHooks => {\n\t// Use a dummy manager that'll be hotswap later after init\n\tconst dummyManager = GdprManager.create([]);\n\tconst [globalStoreHolder, useGlobalStore] =\n\t\tcreateGlobalStore<ReactGdprGuardGlobalStore>((get, set) => ({\n\t\t\tmaterializedState: dummyManager.raw(),\n\t\t\tupdate: (manager: GdprManagerRaw) => {\n\t\t\t\treturn set(store => ({ ...store, materializedState: manager }));\n\t\t\t},\n\t\t}));\n\n\tconst managerWrapper = new ManagerWrapper(dummyManager, globalStoreHolder);\n\n\tconst saviorWrapper = new SaviorWrapper(savior, managerWrapper);\n\n\tconst useGdprSavior: UseGdprSavior = (): GdprSavior => saviorWrapper;\n\n\tconst useGdprManager: UseGdprManager = (): ManagerWrapper => managerWrapper;\n\n\t/**\n\t * For internal uses only\n\t */\n\tconst useWrappedManager = () => useGdprManager().manager;\n\n\tconst useSetupGdprEffect: UseSetupGdprEffect = (\n\t\tonError = (e: unknown) => {}\n\t) => {\n\t\tconst wrappingManager = useGdprManager();\n\t\tconst wrappedManager = useWrappedManager();\n\n\t\tconst restoreManagerOnBoot = useFunction(() => {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst manager = await saviorWrapper.restoreOrCreate(\n\t\t\t\t\t\tmanagerFactory\n\t\t\t\t\t);\n\n\t\t\t\t\twrappingManager.hotswap(manager);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonError(e);\n\t\t\t\t}\n\t\t\t})();\n\t\t}, [wrappingManager]);\n\n\t\tuseEffectOnSecondRender(restoreManagerOnBoot);\n\n\t\t// Auto-close\n\t\twatch([wrappedManager], () => {\n\t\t\tif (wrappingManager.bannerWasShown) {\n\t\t\t\twrappingManager.closeBanner();\n\t\t\t}\n\t\t});\n\t};\n\n\tconst useGdprComputed: UseGdprComputed = <T>(\n\t\tfactory: () => T,\n\t\tdeps: DependencyList = []\n\t): T => {\n\t\tconst globalStore = useGlobalStore();\n\t\tconst fn = useFunction(factory, deps);\n\n\t\treturn useMemo(fn, [globalStore, fn]);\n\t};\n\n\tconst useAttachGdprListenersEffect: UseAttachGdprListenersEffect = (\n\t\tcallback: (eventHub: GdprManagerEventHub, manager: GdprManager) => void\n\t) => {\n\t\tconst wrappedManager = useWrappedManager();\n\n\t\twatch([callback, wrappedManager], () => {\n\t\t\tconst { events } = wrappedManager;\n\t\t\tcallback(events, wrappedManager);\n\t\t});\n\t};\n\n\tconst useGdprGuardEnabledState: UseGdprGuardEnabledState = (\n\t\tguardName: string,\n\t\tuseBannerStatus: boolean = false\n\t) => {\n\t\treturn useGdprComputed(() => {\n\t\t\tconst bannerWasShown =\n\t\t\t\t!useBannerStatus || managerWrapper.bannerWasShown;\n\n\t\t\treturn (\n\t\t\t\tbannerWasShown &&\n\t\t\t\t(managerWrapper.getGuard(guardName)?.enabled ?? false)\n\t\t\t);\n\t\t}, [guardName, managerWrapper.bannerWasShown]);\n\t};\n\n\tconst useGdprGuard: UseGdprGuard = (guardName: string) => {\n\t\tconst manager = useGdprManager();\n\n\t\tconst guard = useGdprComputed(() => {\n\t\t\treturn manager.getGuard(guardName)?.raw();\n\t\t}, [guardName, manager]) as GdprGuardRaw | null;\n\n\t\tconst enableGuard = useFunction(() => {\n\t\t\tmanager.enable(guardName);\n\t\t}, [guardName, manager]);\n\n\t\tconst disableGuard = useFunction(() => {\n\t\t\tmanager.disable(guardName);\n\t\t}, [guardName, manager]);\n\n\t\tconst toggleGuard = useFunction(() => {\n\t\t\tmanager.toggle(guardName);\n\t\t}, [guardName, manager]);\n\n\t\treturn {\n\t\t\tguard,\n\t\t\tenableGuard,\n\t\t\tdisableGuard,\n\t\t\ttoggleGuard,\n\t\t};\n\t};\n\n\tconst useGdpr: UseGdpr = () => {\n\t\tconst wrapper = useGdprManager();\n\n\t\t// Manager\n\t\tconst manager = useGdprComputed(\n\t\t\t() => wrapper.materializedState,\n\t\t\t[wrapper, wrapper.materializedState]\n\t\t);\n\n\t\tconst enableManager = useFunction(() => {\n\t\t\twrapper.enable();\n\t\t}, [wrapper]);\n\n\t\tconst disableManager = useFunction(() => {\n\t\t\twrapper.disable();\n\t\t}, [wrapper]);\n\n\t\tconst toggleManager = useFunction(() => {\n\t\t\twrapper.toggle();\n\t\t}, [wrapper]);\n\n\t\t// Guard/group\n\t\tconst enableGuard = useFunction(\n\t\t\t(guardName: string) => {\n\t\t\t\twrapper.enable(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst disableGuard = useFunction(\n\t\t\t(guardName: string) => {\n\t\t\t\twrapper.disable(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst toggleGuard = useFunction(\n\t\t\t(guardName: string) => {\n\t\t\t\twrapper.toggle(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst guardIsEnabled = useFunction(\n\t\t\t(guardName: string, useBannerStatus: boolean = false) => {\n\t\t\t\tconst bannerWasShown =\n\t\t\t\t\t!useBannerStatus || wrapper.bannerWasShown;\n\t\t\t\treturn bannerWasShown && wrapper.isEnabled(guardName);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\t// Storage\n\t\tconst enableForStorage = useFunction(\n\t\t\t(storage: GdprStorage) => {\n\t\t\t\twrapper.enableForStorage(storage);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst disableForStorage = useFunction(\n\t\t\t(storage: GdprStorage) => {\n\t\t\t\twrapper.disableForStorage(storage);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst toggleForStorage = useFunction(\n\t\t\t(storage: GdprStorage) => {\n\t\t\t\twrapper.toggleForStorage(storage);\n\t\t\t},\n\t\t\t[wrapper]\n\t\t);\n\n\t\tconst closeGdprBanner = useFunction(\n\t\t\t() => wrapper.closeBanner(),\n\t\t\t[wrapper]\n\t\t);\n\t\tconst resetAndShowBanner = useFunction(\n\t\t\t() => wrapper.resetAndShowBanner(),\n\t\t\t[wrapper]\n\t\t);\n\t\tconst bannerWasShown = useGdprComputed(\n\t\t\t() => wrapper.bannerWasShown,\n\t\t\t[wrapper]\n\t\t);\n\n\t\treturn {\n\t\t\t// Meta\n\t\t\tcloseGdprBanner,\n\t\t\tresetAndShowBanner,\n\t\t\tbannerWasShown,\n\t\t\t// Manager\n\t\t\tmanager,\n\t\t\tenableManager,\n\t\t\tdisableManager,\n\t\t\ttoggleManager,\n\t\t\t// Guard/group\n\t\t\tenableGuard,\n\t\t\tdisableGuard,\n\t\t\ttoggleGuard,\n\t\t\tguardIsEnabled,\n\t\t\t// Storage\n\t\t\tenableForStorage,\n\t\t\tdisableForStorage,\n\t\t\ttoggleForStorage,\n\t\t};\n\t};\n\n\treturn {\n\t\tuseSetupGdprEffect,\n\t\tuseAttachGdprListenersEffect,\n\n\t\tuseGdprSavior,\n\t\tuseGdprManager,\n\t\tuseGdprComputed,\n\n\t\tuseGdprGuardEnabledState,\n\t\tuseGdprGuard,\n\t\tuseGdpr,\n\t};\n};\n"],"names":["ManagerWrapper","_manager","_globalStoreHolder","this","_proto","prototype","triggerUpdate","store","update","generateRawManager","closeBanner","manager","resetAndShowBanner","json","materializedState","toString","JSON","stringify","disable","target","wrap","enable","toggle","disableForStorage","storageType","enableForStorage","toggleForStorage","isEnabled","name","hasGroup","groupName","hasGuard","guardName","getGroup","getGuard","raw","hotswap","newManager","method","_this$manager","args","slice","call","arguments","apply","guard","key","get","bannerWasShown","events","_GdprSaviorAdapter","SaviorWrapper","savior","managerWrapper","_this","updateSharedManager","_this2","Promise","resolve","then","check","exists","shouldUpdate","restore","restoreOrCreate","factory","GdprSaviorAdapter","useFunction","fn","deps","useCallback","watch","inputs","useEffect","managerFactory","initialStoreFactory","subscriptions","dummyManager","GdprManager","create","_createGlobalStore","set","_extends","Map","emit","forEach","subscribe","Symbol","storeHolder","updater","emitter","_useState","useState","localStore","setLocalStore","useGlobalStore","saviorWrapper","useGdprManager","useWrappedManager","useGdprComputed","globalStore","useMemo","useSetupGdprEffect","onError","e","wrappingManager","wrappedManager","didMount","useRef","current","useEffectOnSecondRender","_temp","_catch","reject","useAttachGdprListenersEffect","callback","useGdprSavior","useGdprGuardEnabledState","useBannerStatus","_managerWrapper$getGu","_managerWrapper$getGu2","enabled","useGdprGuard","_manager$getGuard","enableGuard","disableGuard","toggleGuard","useGdpr","wrapper","enableManager","disableManager","toggleManager","guardIsEnabled","storage","closeGdprBanner"],"mappings":"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"}